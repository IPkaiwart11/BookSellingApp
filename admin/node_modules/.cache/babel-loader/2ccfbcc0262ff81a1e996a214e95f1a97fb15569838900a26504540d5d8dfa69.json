{"ast":null,"code":"// import axios from \"axios\";\n\n// const BASE_URL = \"http://localhost:5000/api/\";\n// const TOKEN = JSON.parse(JSON.parse(localStorage.getItem(\"persist:root\")).user).currentUser.accessToken;\n// console.log(TOKEN);\n// export const publicRequest = axios.create({\n//   baseURL: BASE_URL,\n// });\n\n// export const userRequest = axios.create({\n//   baseURL: BASE_URL,\n//   headers: { token: `Bearer ${TOKEN}` },\n// });\n\nimport axios from \"axios\";\nconst BASE_URL = \"http://localhost:5000/api/\";\n\n// Function to get the access token from localStorage\nconst getToken = () => {\n  const persistedRoot = localStorage.getItem(\"persist:root\");\n  if (persistedRoot) {\n    var _user$currentUser;\n    const user = JSON.parse(JSON.parse(persistedRoot).user);\n    return (user === null || user === void 0 ? void 0 : (_user$currentUser = user.currentUser) === null || _user$currentUser === void 0 ? void 0 : _user$currentUser.accessToken) || null;\n  }\n  return null;\n};\n\n// Create a userRequest with the access token if available\nexport const userRequest = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    token: `Bearer ${getToken()}`\n  }\n});\n\n// Create a publicRequest without the access token\nexport const publicRequest = axios.create({\n  baseURL: BASE_URL\n});","map":{"version":3,"names":["axios","BASE_URL","getToken","persistedRoot","localStorage","getItem","_user$currentUser","user","JSON","parse","currentUser","accessToken","userRequest","create","baseURL","headers","token","publicRequest"],"sources":["C:/Users/91831/Desktop/viva1/BooksellingApp/admin/src/requestMethods.js"],"sourcesContent":["// import axios from \"axios\";\n\n// const BASE_URL = \"http://localhost:5000/api/\";\n// const TOKEN = JSON.parse(JSON.parse(localStorage.getItem(\"persist:root\")).user).currentUser.accessToken;\n// console.log(TOKEN);\n// export const publicRequest = axios.create({\n//   baseURL: BASE_URL,\n// });\n\n// export const userRequest = axios.create({\n//   baseURL: BASE_URL,\n//   headers: { token: `Bearer ${TOKEN}` },\n// });\n\n\n\n\nimport axios from \"axios\";\n\nconst BASE_URL = \"http://localhost:5000/api/\";\n\n// Function to get the access token from localStorage\nconst getToken = () => {\n  const persistedRoot = localStorage.getItem(\"persist:root\");\n  if (persistedRoot) {\n    const user = JSON.parse(JSON.parse(persistedRoot).user);\n    return user?.currentUser?.accessToken || null;\n  }\n  return null;\n};\n\n// Create a userRequest with the access token if available\nexport const userRequest = axios.create({\n  baseURL: BASE_URL,\n  headers: { token: `Bearer ${getToken()}` },\n});\n\n// Create a publicRequest without the access token\nexport const publicRequest = axios.create({\n  baseURL: BASE_URL,\n});\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAKA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,4BAA4B;;AAE7C;AACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAMC,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAC1D,IAAIF,aAAa,EAAE;IAAA,IAAAG,iBAAA;IACjB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACC,KAAK,CAACN,aAAa,CAAC,CAACI,IAAI,CAAC;IACvD,OAAO,CAAAA,IAAI,aAAJA,IAAI,wBAAAD,iBAAA,GAAJC,IAAI,CAAEG,WAAW,cAAAJ,iBAAA,uBAAjBA,iBAAA,CAAmBK,WAAW,KAAI,IAAI;EAC/C;EACA,OAAO,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAGZ,KAAK,CAACa,MAAM,CAAC;EACtCC,OAAO,EAAEb,QAAQ;EACjBc,OAAO,EAAE;IAAEC,KAAK,EAAG,UAASd,QAAQ,CAAC,CAAE;EAAE;AAC3C,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMe,aAAa,GAAGjB,KAAK,CAACa,MAAM,CAAC;EACxCC,OAAO,EAAEb;AACX,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}