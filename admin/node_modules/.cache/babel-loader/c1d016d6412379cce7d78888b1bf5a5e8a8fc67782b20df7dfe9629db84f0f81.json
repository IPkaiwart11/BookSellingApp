{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\n// import { publicRequest } from \"../requestMethods\";\n// import { styled } from '@mui/material/styles';\n// import Grid from '@mui/material/Grid';\n// import Paper from '@mui/material/Paper';\n// import Typography from '@mui/material/Typography';\n// import ButtonBase from '@mui/material/ButtonBase';\n\n// const Img = styled('img')({\n//   margin: 'auto',\n//   display: 'block',\n//   maxWidth: '100%',\n//   maxHeight: '100%',\n// });\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Order() {\n  //   const [carts, setCarts] = useState([]);\n\n  //   useEffect(() => {\n  //     const getAllCartsData = async () => {\n  //       try {\n  //         // const res = await publicRequest.get(\"https://booksellingapp.onrender.com/api/carts\");\n  //         const res = await publicRequest.get(\"http://localhost:5000/api/carts\");\n  //         setCarts(res.data);\n  //       } catch (error) {\n  //         console.error(\"Error fetching cart data:\", error);\n  //       }\n  //     };\n  //     getAllCartsData();\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_c = Order;\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["React","useEffect","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","Order","_c","$RefreshReg$"],"sources":["C:/Users/91831/Desktop/viva1/BooksellingApp/admin/src/components/order/Order.jsx"],"sourcesContent":["\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n// import { publicRequest } from \"../requestMethods\";\r\n// import { styled } from '@mui/material/styles';\r\n// import Grid from '@mui/material/Grid';\r\n// import Paper from '@mui/material/Paper';\r\n// import Typography from '@mui/material/Typography';\r\n// import ButtonBase from '@mui/material/ButtonBase';\r\n\r\n\r\n\r\n// const Img = styled('img')({\r\n//   margin: 'auto',\r\n//   display: 'block',\r\n//   maxWidth: '100%',\r\n//   maxHeight: '100%',\r\n// });\r\n\r\n\r\n\r\nexport default function Order() {\r\n//   const [carts, setCarts] = useState([]);\r\n  \r\n  \r\n//   useEffect(() => {\r\n//     const getAllCartsData = async () => {\r\n//       try {\r\n//         // const res = await publicRequest.get(\"https://booksellingapp.onrender.com/api/carts\");\r\n//         const res = await publicRequest.get(\"http://localhost:5000/api/carts\");\r\n//         setCarts(res.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching cart data:\", error);\r\n//       }\r\n//     };\r\n//     getAllCartsData();\r\n//   }, []);\r\n\r\n  return (\r\n   <>\r\n    {/* <div \r\n    style={{\r\n      background:'#cdfaf6',\r\n      }}>\r\n    {carts.length > 0 ? (\r\n      carts.map((cart, cartIndex) => (\r\n    <Paper\r\n      key ={cartIndex}\r\n      sx={{\r\n        p: 2,\r\n        margin: 'auto',\r\n        marginTop: '10px',\r\n        maxWidth: 600,\r\n        flexGrow: 1,\r\n        background:'rgba(253,187,45,1)'\r\n      }}\r\n    >\r\n      {cart.products &&\r\n                 cart.products.map((product, index) => (\r\n      <Grid\r\n      key={index}\r\n      container spacing={2}\r\n      >\r\n      \r\n        <Grid\r\n        item>\r\n          <ButtonBase sx={{ width: 128, height: 128 }}>\r\n            <Img alt=\"img\" src={product.product.img} />\r\n          </ButtonBase>\r\n        </Grid>\r\n        <Grid item xs={12} sm container>\r\n          <Grid item xs container direction=\"column\" spacing={2}>\r\n            <Grid item xs>\r\n              <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\r\n                {product.product.title}\r\n              </Typography>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n               Quantity:  {product.quantity}\r\n              </Typography>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n               Language:  {product.product.language}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n               Description : {product.product.desc}\r\n              </Typography>\r\n            </Grid>\r\n            \r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\" component=\"div\">\r\n            Price: Rs  {product.product.price}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n          </Grid>\r\n      </Grid>\r\n                 ))}\r\n    <Grid item sx={{width:'100%',display:'flex', justifyContent:'end' }}>\r\n      <Typography sx={{ cursor: 'pointer'}} >\r\n       <b>Total: Rs {cart.total}</b>\r\n      </Typography>\r\n    </Grid>\r\n    </Paper>\r\n      ))\r\n    ):(\r\n      <h2>this is Empty Order</h2>\r\n    )}\r\n  </div> */}\r\n  \r\n</>\r\n  );\r\n}\r\n\r\n"],"mappings":"AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,eAAe,SAASC,KAAKA,CAAA,EAAG;EAChC;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,oBACCD,OAAA,CAAAF,SAAA,mBAqED,CAAC;AAEH;AAACI,EAAA,GAzFuBD,KAAK;AAAA,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}