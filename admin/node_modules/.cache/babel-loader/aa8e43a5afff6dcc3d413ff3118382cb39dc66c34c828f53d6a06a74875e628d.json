{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91831\\\\Desktop\\\\viva1\\\\BooksellingApp\\\\admin\\\\src\\\\pages\\\\userList\\\\UserList.jsx\",\n  _s = $RefreshSig$();\nimport \"./userList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\n// import { userRows } from \"../../dummyData\";\n// import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n// import axios from 'axios';\nimport { NavLink } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { publicRequest } from \"../../requestMethods\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserList() {\n  _s();\n  const [data, setData] = useState([]);\n\n  // \n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const res = await publicRequest.get(\"/users\");\n      const formattedData = res.data.map(item => ({\n        ...item,\n        id: item._id // Rename _id to id\n      }));\n\n      setData(formattedData);\n    } catch (error) {\n      console.log(\"Error during fetching data\", error);\n    }\n  };\n  const handleDelete = id => {\n    setData(data.filter(item => item._id !== _id));\n  };\n  const columns = [{\n    field: \"id\",\n    headerName: \"ID\",\n    width: 90\n  }, {\n    field: \"username\",\n    headerName: \"User\",\n    width: 200,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userListUser\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"userListImg\",\n          src: params.row.avatar,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), params.row.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: \"email\",\n    headerName: \"Email\",\n    width: 200\n  },\n  // {\n  //   field: \"status\",\n  //   headerName: \"Status\",\n  //   width: 120,\n  // },\n  // {\n  //   field: \"transaction\",\n  //   headerName: \"Transaction Volume\",\n  //   width: 160,\n  // },\n  {\n    field: \"action\",\n    headerName: \"Action\",\n    width: 150,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/user/\" + params.row.id,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"userListEdit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteOutline, {\n          className: \"userListDelete\",\n          onClick: () => handleDelete(params.row.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userList\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: data\n      // rows={fetchData}\n      ,\n      disableSelectionOnClick: true,\n      columns: columns,\n      pageSize: 8,\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(UserList, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["DataGrid","DeleteOutline","useState","NavLink","useEffect","publicRequest","jsxDEV","_jsxDEV","Fragment","_Fragment","UserList","_s","data","setData","fetchData","res","get","formattedData","map","item","id","_id","error","console","log","handleDelete","filter","columns","field","headerName","width","renderCell","params","className","children","src","row","avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","username","to","onClick","rows","disableSelectionOnClick","pageSize","checkboxSelection","_c","$RefreshReg$"],"sources":["C:/Users/91831/Desktop/viva1/BooksellingApp/admin/src/pages/userList/UserList.jsx"],"sourcesContent":["import \"./userList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\n// import { userRows } from \"../../dummyData\";\n// import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n// import axios from 'axios';\nimport { NavLink } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { publicRequest } from \"../../requestMethods\";\n\nexport default function UserList() {\n  const [data, setData] = useState([]);\n\n  // \n useEffect(()=>{\n  fetchData();\n },[]);\n\n const fetchData = async () => {\n  try {\n    const res = await publicRequest.get(\"/users\");\n    const formattedData = res.data.map((item) => ({\n      ...item,\n      id: item._id // Rename _id to id\n    }));\n    setData(formattedData);\n  } catch (error) {\n    console.log(\"Error during fetching data\", error);\n  }\n};\n\n\n  const handleDelete = (id) => {\n    setData(data.filter((item) => item._id !== _id));\n  };\n  \n  const columns = [\n    { field: \"id\", headerName: \"ID\", width: 90 },\n    {\n      field: \"username\",\n      headerName: \"User\",\n      width: 200,\n      renderCell: (params) => {\n        return (\n          <div className=\"userListUser\">\n            <img className=\"userListImg\" src={params.row.avatar} alt=\"\" />\n            {params.row.username}\n          </div>\n        );\n      },\n    },\n    { field: \"email\", headerName: \"Email\", width: 200 },\n    // {\n    //   field: \"status\",\n    //   headerName: \"Status\",\n    //   width: 120,\n    // },\n    // {\n    //   field: \"transaction\",\n    //   headerName: \"Transaction Volume\",\n    //   width: 160,\n    // },\n    {\n      field: \"action\",\n      headerName: \"Action\",\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <>\n            <NavLink to={\"/user/\" + params.row.id}>\n              <button className=\"userListEdit\">Edit</button>\n            </NavLink>\n            <DeleteOutline\n              className=\"userListDelete\"\n              onClick={() => handleDelete(params.row.id)}\n            />\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div className=\"userList\">\n      <DataGrid\n        rows={data}\n        // rows={fetchData}\n        disableSelectionOnClick\n        columns={columns}\n        pageSize={8}\n        checkboxSelection\n      />\n\n        {/* {Array.isArray(data) && data.length > 0? */}\n      {/* (data.map((userdata)=> */}\n       {/* <ul key={userdata._id}> */}\n        {/* <li>{userdata.username}</li> */}\n        {/* <li>{userdata.email}</li> */}\n        {/* <li>{userdata.password}</li> */}\n       {/* </ul> */}\n      {/* ) */}\n      {/* ):( */}\n        {/* <p>loading...</p> */}\n      {/* )} */}\n    </div> \n  ); \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}